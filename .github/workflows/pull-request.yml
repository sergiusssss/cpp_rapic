name: PR verification
run-name: PR verification - ${{ github.event.pull_request.title }}
on:
  push:
    branches: [ "master" ]
  pull_request:
jobs:
  build-and-run-tests:
    name: ${{ matrix.configs.name }} (${{ matrix.build_type }}) Build and Run tests
    runs-on: ${{ matrix.configs.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache cmake dependencies
        id: cmake-deps
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-build-${{ matrix.build_type }}-${{ matrix.configs.cache_key }}
          path: ./build/_deps

      - name: Create build folder
        if: ${{ steps.cmake-deps.outputs.cache-hit != 'true' }}
        run: mkdir build

      - name: Configuration
        working-directory: ./build
        run: cmake ${{ matrix.configs.cmake_args }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..

      - name: Build
        working-directory: ./build
        run: cmake --build . --config ${{ matrix.build_type }}

      - name: Run tests
        working-directory: ./build
        run: ctest --output-on-failure

    strategy:
      fail-fast: false
      matrix:
        configs: # Better to add os:macos-latest later
          - {
            name: Ubuntu clang,
            os: ubuntu-latest,
            cmake_args: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++,
            cache_key: clang,
          }
          - {
            name: Ubuntu gcc,
            os: ubuntu-latest,
            cmake_args: -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++,
            cache_key: gcc,
          }
          - {
            name: Windows MSVC,
            os: windows-latest,
            cmake_args: -D_WIN32_WINNT=0x0A00,
            cache_key: msvc,
          }
          - {
            name: Windows clang,
            os: windows-latest,
            cmake_args: -T ClangCl,
            cache_key: clang,
          }
        build_type: [ Release ] # Better to add Debug later
